import { jsPDF } from 'jspdf';
import type { LastWishState } from '../types';

export async function generatePDF(state: LastWishState): Promise<Blob> {
  const pdf = new jsPDF();
  
  // Header
  pdf.setFontSize(24);
  pdf.text('Last Wish - Cryptocurrency Estate Planning', 20, 20);
  
  pdf.setFontSize(12);
  pdf.text(`Generated on: ${new Date().toLocaleDateString()}`, 20, 30);
  
  // Owner Information
  pdf.setFontSize(16);
  pdf.text('Owner Information', 20, 50);
  pdf.setFontSize(12);
  pdf.text(`Name: ${state.owner.fullName}`, 20, 60);
  pdf.text(`Primary Wallet: ${state.owner.primaryWallet || 'Not connected'}`, 20, 70);
  
  if (state.owner.specialInstructions) {
    pdf.text('Special Instructions:', 20, 80);
    const lines = pdf.splitTextToSize(state.owner.specialInstructions, 170);
    pdf.text(lines, 20, 90);
  }
  
  // Additional Wallets
  let yPos = 110;
  if (state.wallets.length > 0) {
    pdf.setFontSize(16);
    pdf.text('Additional Wallets', 20, yPos);
    yPos += 10;
    
    pdf.setFontSize(12);
    state.wallets.forEach((wallet) => {
      const walletText = wallet.ens 
        ? `${wallet.ens} (${wallet.address})`
        : wallet.address;
      pdf.text(walletText, 20, yPos);
      yPos += 10;
    });
  }
  
  // Beneficiaries
  if (state.beneficiaries.length > 0) {
    yPos += 10;
    pdf.setFontSize(16);
    pdf.text('Beneficiaries', 20, yPos);
    yPos += 10;
    
    pdf.setFontSize(12);
    state.beneficiaries.forEach((beneficiary) => {
      pdf.text(`Name: ${beneficiary.name}`, 20, yPos);
      yPos += 7;
      
      if (beneficiary.addressOrEns) {
        pdf.text(`Wallet/ENS: ${beneficiary.addressOrEns}`, 30, yPos);
        yPos += 7;
      }
      
      if (beneficiary.email) {
        pdf.text(`Email: ${beneficiary.email}`, 30, yPos);
        yPos += 7;
      }
      
      if (beneficiary.relationship) {
        pdf.text(`Relationship: ${beneficiary.relationship}`, 30, yPos);
        yPos += 7;
      }
      
      yPos += 5;
    });
  }
  
  // Assets Summary
  if (state.tokens.length > 0 || state.nfts.length > 0) {
    yPos += 10;
    pdf.setFontSize(16);
    pdf.text('Digital Assets', 20, yPos);
    yPos += 10;
    
    pdf.setFontSize(12);
    pdf.text(`Tokens: ${state.tokens.length}`, 20, yPos);
    yPos += 7;
    pdf.text(`NFTs: ${state.nfts.length}`, 20, yPos);
    yPos += 7;
  }
  
  // Payment confirmation
  if (state.payment?.txHash) {
    yPos += 10;
    pdf.setFontSize(12);
    pdf.text(`Payment Transaction: ${state.payment.txHash}`, 20, yPos);
  }
  
  // Footer
  pdf.setFontSize(10);
  pdf.text('This document was generated by LastWish.eth', 20, 280);
  pdf.text('Store this document securely with your will', 20, 285);
  
  // Return as blob
  return pdf.output('blob');
}